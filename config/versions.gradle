ext {
    sdk_compile_version = 29
    sdk_min_version = 21

    versionMajor = 0
    versionMinor = 0
    versionPatch = 1
    version_code = 1

    kotlin_version = '1.3.31'
    androidx_version = '1.0.2'
    constraintlayout_version = '2.0.0-alpha3'
    kodein_version = "5.1.1"
    retrofit_version = "2.4.0"
    okHttp_version = "3.10.0"
    glide_version = "4.9.0"
    gson_version = "2.8.5"
    lifecycle_version = "1.1.1"
    powermock_version = '1.6.6'
    junit_version = '4.12'
    mockito_version = '2.23.0'
    mockitokotlin2_version = '2.1.0'
    robolectric_version = '4.0'
    design_version = '28.0.0'
    coroutines_version = "1.2.1"
    multidex_version = "1.0.0"
    exoPlayer_version = '2.9.3'
    media_version = '1.1.0'
    room_version = "2.2.0-rc01"
    navigation_version = "2.1.0"
    rxKotlin_version = "2.3.0"
    rxJava_version = "2.2.6"
    rxAndroid_version = "2.1.1"

    core_version = "0.0.10"
    core_android_version = "0.0.14"

    def base = [
            kotlinJDK         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            kotlinReflect     : "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            lifecycle         : "android.arch.lifecycle:extensions:$lifecycle_version",
            material          : "com.google.android.material:material:1.1.0-alpha07",
            constraintlayout  : "androidx.constraintlayout:constraintlayout:2.0.0-alpha2",
            coroutines        : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
            multidex          : "com.android.support:multidex:$multidex_version",
            coroutinesCore    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version",
            coroutinesAndroid : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version",
            coroutinesAndroidX: "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-alpha03",
            media             : "androidx.media:media:$media_version",
            works             : "android.arch.work:work-runtime-ktx:1.0.1",
            maps              : "com.google.android.gms:play-services-maps:17.0.0"
    ]

    def other = [
            analytics       : "com.google.android.gms:play-services-analytics:17.0.0",
            downloader      : "com.mindorks.android:prdownloader:0.6.0",
            expandableLayout: "com.github.florent37:expansionpanel:1.2.2"
    ]

    def kodein = [
            generic  : "org.kodein.di:kodein-di-generic-jvm:$kodein_version",
            framework: "org.kodein.di:kodein-di-framework-android:$kodein_version"
    ]

    def retrofit = [
            main      : "com.squareup.retrofit2:retrofit:$retrofit_version",
            adapter   : "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version",
            gson      : "com.squareup.retrofit2:converter-gson:$retrofit_version",
            scalars   : "com.squareup.retrofit2:converter-scalars:$retrofit_version",
            coroutines: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
    ]

    def glide = [
            glide          : "com.github.bumptech.glide:glide:$glide_version",
            compiler       : "com.github.bumptech.glide:compiler:$glide_version",
            transformations: "jp.wasabeef:glide-transformations:4.0.0"
    ]

    def paging = [
            core: "androidx.paging:paging-runtime-ktx:2.1.0"
    ]

    def tests = [
            core       : "androidx.test:core:1.0.0",
            coreTesting: "androidx.arch.core:core-testing:2.0.0",
            jUnitRule  : "androidx.test:rules:1.1.0",
            jUnitRunner: "androidx.test:runner:1.1.0",
            junit      : 'androidx.test.ext:junit:1.0.0',
            mokito     : 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC3',
            coroutines : "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.1"
    ]

    def exoPlayer = [
            exoplayer   : "com.google.android.exoplayer:exoplayer:$exoPlayer_version",
            exoplayerUI : "com.google.android.exoplayer:exoplayer-ui:$exoPlayer_version",
            mediasession: "com.google.android.exoplayer:extension-mediasession:$exoPlayer_version"
    ]

    def room = [
            runtime : "androidx.room:room-runtime:$room_version",
            compiler: "androidx.room:room-compiler:$room_version",
            ktx     : "androidx.room:room-ktx:$room_version"
    ]

    def nav = [
            appcompat            : "androidx.appcompat:appcompat:1.1.0",
            navigationFragment   : "androidx.navigation:navigation-fragment:$navigation_version",
            navigationUI         : "androidx.navigation:navigation-ui:$navigation_version",
            navigationFragmentKtx: "androidx.navigation:navigation-fragment-ktx:$navigation_version",
            navigationUIKtx      : "androidx.navigation:navigation-ui-ktx:$navigation_version",
            drawerLayout         : "androidx.drawerlayout:drawerlayout:1.0.0"
    ]

    def core = [
            presentation  : "com.github.VRGsoftUA.coreAndroid:presentation:$core_android_version",
            retrofit      : "com.github.VRGsoftUA.coreAndroid:retrofit:$core_android_version",
            remote        : "com.github.VRGsoftUA.coreAndroid:remote:$core_android_version",
            networkmanager: "com.github.VRGsoftUA.coreAndroid:networkmanager:$core_android_version",
            gateway       : "com.github.VRGsoftUA.coreAndroid:gateway:$core_android_version",
            annotations   : "com.github.VRGsoftUA.core:annotations:$core_version",
            processor     : "com.github.VRGsoftUA.core:processor:$core_version"
    ]

    def espresso = [
            core: "com.android.support.test.espresso:espresso-core:3.0.2"
    ]

    app = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: nav.appcompat],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: base.works],

            [configuration: "implementation", dependency: other.downloader],

            [configuration: "implementation", dependency: core.retrofit],

            [configuration: "testImplementation", dependency: tests.core],
            [configuration: "testImplementation", dependency: tests.coreTesting],
            [configuration: "testImplementation", dependency: tests.coroutines],
            [configuration: "testImplementation", dependency: tests.junit],
            [configuration: "androidTestImplementation", dependency: tests.jUnitRule],
            [configuration: "androidTestImplementation", dependency: tests.jUnitRunner],
            [configuration: "testImplementation", dependency: tests.mokito],
            [configuration: "androidTestImplementation", dependency: espresso.core],
    ]

    remoteModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],

            [configuration: "implementation", dependency: retrofit.main],
            [configuration: "implementation", dependency: retrofit.adapter],
            [configuration: "implementation", dependency: retrofit.gson],
            [configuration: "implementation", dependency: retrofit.scalars],
            [configuration: "implementation", dependency: retrofit.coroutines],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "api", dependency: core.remote],
    ]

    localModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],

            [configuration: "implementation", dependency: paging.core],

            [configuration: "implementation", dependency: room.runtime],
            [configuration: "implementation", dependency: room.ktx],
            [configuration: "kapt", dependency: room.compiler],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],
    ]

    collectionView = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],

            [configuration: "implementation", dependency: paging.core],
    ]

    bookView = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
    ]

    featureSplash = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.media],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: core.presentation],
    ]

    featureContent = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.media],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],
            [configuration: "implementation", dependency: base.kotlinReflect],
            [configuration: "implementation", dependency: base.maps],
            [configuration: "implementation", dependency: nav.appcompat],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: glide.glide],
            [configuration: "kapt", dependency: glide.compiler],
            [configuration: "implementation", dependency: glide.transformations],

            [configuration: "implementation", dependency: core.presentation],
            [configuration: "implementation", dependency: core.networkmanager],

            [configuration: "implementation", dependency: other.expandableLayout],

            [configuration: "compileOnly", dependency: core.annotations],
            [configuration: "api", dependency: core.processor],
            [configuration: "annotationProcessor", dependency: core.presentation],

            [configuration: "testImplementation", dependency: tests.core],
            [configuration: "testImplementation", dependency: tests.coreTesting],
            [configuration: "testImplementation", dependency: tests.coroutines],
            [configuration: "testImplementation", dependency: tests.junit],
            [configuration: "androidTestImplementation", dependency: tests.jUnitRule],
            [configuration: "androidTestImplementation", dependency: tests.jUnitRunner],
            [configuration: "testImplementation", dependency: tests.mokito],
            [configuration: "androidTestImplementation", dependency: espresso.core],
    ]

    featureQuestions = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.media],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],
            [configuration: "implementation", dependency: base.kotlinReflect],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: core.presentation],
            [configuration: "implementation", dependency: core.networkmanager],

            [configuration: "compileOnly", dependency: core.annotations],
            [configuration: "api", dependency: core.processor],
            [configuration: "annotationProcessor", dependency: core.presentation],
    ]

    featureWeb = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.media],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: core.presentation],
    ]

    featureLogin = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],
            [configuration: "implementation", dependency: nav.appcompat],
            [configuration: "implementation", dependency: base.kotlinReflect],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: core.presentation],
            [configuration: "implementation", dependency: core.networkmanager],

            [configuration: "compileOnly", dependency: core.annotations],
            [configuration: "api", dependency: core.processor],
            [configuration: "annotationProcessor", dependency: core.presentation],
    ]

    featureMain = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.constraintlayout],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.material],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],
            [configuration: "implementation", dependency: base.kotlinReflect],

            [configuration: "implementation", dependency: paging.core],

            [configuration: "implementation", dependency: glide.glide],
            [configuration: "kapt", dependency: glide.compiler],
            [configuration: "implementation", dependency: glide.transformations],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: nav.appcompat],
            [configuration: "implementation", dependency: nav.drawerLayout],
            [configuration: "implementation", dependency: nav.navigationFragment],
            [configuration: "implementation", dependency: nav.navigationUI],
            [configuration: "implementation", dependency: nav.navigationFragmentKtx],
            [configuration: "implementation", dependency: nav.navigationUIKtx],

            [configuration: "implementation", dependency: core.presentation],
            [configuration: "implementation", dependency: core.networkmanager],

            [configuration: "compileOnly", dependency: core.annotations],
            [configuration: "api", dependency: core.processor],
            [configuration: "annotationProcessor", dependency: core.presentation],

            [configuration: "implementation", dependency: core.retrofit],
            [configuration: "implementation", dependency: retrofit.main],
            [configuration: "implementation", dependency: retrofit.adapter],
            [configuration: "implementation", dependency: retrofit.gson],
            [configuration: "implementation", dependency: retrofit.scalars],
            [configuration: "implementation", dependency: retrofit.coroutines],
    ]

    entityModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
    ]

    gatewayModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: paging.core],

            [configuration: "implementation", dependency: core.gateway],
            [configuration: "implementation", dependency: core.networkmanager],

            [configuration: "testImplementation", dependency: tests.core],
            [configuration: "testImplementation", dependency: tests.coreTesting],
            [configuration: "testImplementation", dependency: tests.coroutines],
            [configuration: "testImplementation", dependency: tests.junit],
            [configuration: "testImplementation", dependency: tests.jUnitRule],
            [configuration: "testImplementation", dependency: tests.jUnitRunner],
            [configuration: "testImplementation", dependency: tests.mokito],
    ]

    useCaseModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.coroutinesAndroidX],

            [configuration: "implementation", dependency: paging.core],

            [configuration: "implementation", dependency: core.networkmanager],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],
    ]

    playerModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "api", dependency: base.media],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],

            [configuration: "implementation", dependency: glide.glide],
            [configuration: "kapt", dependency: glide.compiler],

            [configuration: "implementation", dependency: exoPlayer.exoplayer, options: {
                exclude group: 'com.android.support'
            }],
            [configuration: "implementation", dependency: exoPlayer.exoplayerUI, options: {
                exclude group: 'com.android.support'
            }],
            [configuration: "implementation", dependency: exoPlayer.mediasession, options: {
                exclude group: 'com.android.support'
            }]
    ]

    pushModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],
            [configuration: "implementation", dependency: base.works],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],
    ]

    analyticsModule = [
            [configuration: "implementation", dependency: base.kotlinJDK],
            [configuration: "implementation", dependency: base.lifecycle],
            [configuration: "implementation", dependency: base.coroutinesCore],
            [configuration: "implementation", dependency: base.coroutinesAndroid],

            [configuration: "implementation", dependency: other.analytics],

            [configuration: "implementation", dependency: kodein.generic],
            [configuration: "implementation", dependency: kodein.framework],
    ]
}