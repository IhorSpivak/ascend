package com.doneit.ascend.presentation.main.home.community_feed.common

import androidx.constraintlayout.widget.ConstraintSet
import androidx.core.view.marginEnd
import androidx.core.view.marginStart
import com.doneit.ascend.domain.entity.community_feed.Attachment
import com.doneit.ascend.presentation.main.R
import com.doneit.ascend.presentation.main.databinding.ListItemFeedBinding

fun applyPortraitLayoutFor2(set: ConstraintSet) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        R.id.imvSecond,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
}

fun applyLandscapeLayoutFor2(set: ConstraintSet) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        R.id.imvSecond,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
}

fun applyPortraitLayoutFor3(set: ConstraintSet) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        R.id.imvSecond,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        R.id.imvThird,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.TOP,
        R.id.imvSecond,
        ConstraintSet.BOTTOM
    )
}

fun applyEqualLayoutFor3(set: ConstraintSet) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        R.id.imvSecond,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        R.id.imvThird,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.START,
        R.id.imvSecond,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
}

fun applyLandscapeLayoutFor3(set: ConstraintSet) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        R.id.imvSecond,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        R.id.imvThird,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.START,
        R.id.imvSecond,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )
}

fun ListItemFeedBinding.applyLayoutFor4(
    attachments: List<Attachment>,
    set: ConstraintSet
) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        R.id.imvSecond,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        R.id.imvThird,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.END,
        R.id.imvFourth,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.START,
        R.id.imvSecond,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )

    set.connect(
        R.id.imvFourth,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.START,
        R.id.imvThird,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )
    val weight = calculateHeight(attachments).toFloat() /
            (calculateHeight(attachments) + calculateHeight(
                attachments,
                dividerWidth = 3f
            ))
    set.setVerticalWeight(R.id.imvFirst, weight)
    set.setVerticalWeight(R.id.imvSecond, 1 - weight)
}

fun applyLayoutFor5(
    set: ConstraintSet
) {
    set.connect(
        R.id.imvFirst,
        ConstraintSet.END,
        R.id.imvThird,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.BOTTOM,
        R.id.imvSecond,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvFirst,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.START,
        ConstraintSet.PARENT_ID,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.TOP,
        R.id.imvFirst,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.END,
        R.id.imvThird,
        ConstraintSet.START
    )
    set.connect(
        R.id.imvSecond,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.BOTTOM,
        R.id.imvFourth,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvThird,
        ConstraintSet.TOP,
        ConstraintSet.PARENT_ID,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.BOTTOM,
        R.id.imvFifth,
        ConstraintSet.TOP
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFourth,
        ConstraintSet.TOP,
        R.id.imvThird,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvFifth,
        ConstraintSet.BOTTOM,
        ConstraintSet.PARENT_ID,
        ConstraintSet.BOTTOM
    )
    set.connect(
        R.id.imvFifth,
        ConstraintSet.END,
        ConstraintSet.PARENT_ID,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFifth,
        ConstraintSet.START,
        R.id.imvFirst,
        ConstraintSet.END
    )
    set.connect(
        R.id.imvFifth,
        ConstraintSet.TOP,
        R.id.imvFourth,
        ConstraintSet.BOTTOM
    )
}

fun ListItemFeedBinding.calculateHeight(
    attachments: List<Attachment>,
    dividerWidth: Float = 1f,
    multiplierResult: Float = 1f,
    attachmentIndex: Int = 0
): Int {
    val width = if (mivAttachments.measuredWidth != 0) mivAttachments.measuredWidth
    else root.measuredWidth - mivAttachments.marginStart - mivAttachments.marginEnd
    return (multiplierResult * attachments[attachmentIndex].size.aspectHeight(
        (width / dividerWidth).toInt()
    )).toInt()
}